Index: 10_CUL_HM.pm
===================================================================
--- 10_CUL_HM.pm	(revision 11608)
+++ 10_CUL_HM.pm	(working copy)
@@ -920,7 +920,7 @@
   if ((  $hash->{helper}{io}{newChn} ne $oldChn)
       && $hash->{IODev}
       && $hash->{IODev}->{TYPE}
-      && $hash->{IODev}->{TYPE} eq "HMLAN"){
+      && $hash->{IODev}->{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/){
     IOWrite($hash, "", "init:$p[0]");
   }
 }
@@ -2768,7 +2768,7 @@
   }
   if($rxt & 0x10 && $mhp->{devH}{helper}{prt}{sleeping}){ # lazy config
     if($mhp->{mFlgH} & 0x02                  #wakeup device
-       && $defs{$mhp->{devH}{IODev}{NAME}}{TYPE} eq "HMLAN"){
+       && $defs{$mhp->{devH}{IODev}{NAME}}{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/){
       $mhp->{devH}{helper}{io}{newCh} = 1 if ($mhp->{devH}{helper}{prt}{sProc} == 2);
       CUL_HM_appFromQ($mhp->{devN},"cf");# stack cmds if waiting
       $mhp->{devH}{helper}{prt}{sleeping} = 0;
@@ -8248,7 +8248,7 @@
   
   foreach my $ioN(split",",AttrVal($name,"IOList","")){# set parameter in IO
     next if (!$defs{$ioN});
-    if (  $defs{$ioN}{TYPE} eq "HMLAN"){;
+    if (  $defs{$ioN}{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/){;
     }
     elsif($defs{$ioN}{TYPE} eq "CUL"){
       CommandAttr(undef, "$ioN rfmode HomeMatic") 
@@ -8344,7 +8344,7 @@
       if (   $hash->{IODev} 
           && $hash->{IODev} ne $defs{$iom}
           && $hash->{IODev}->{TYPE}
-          && $hash->{IODev}->{TYPE} eq "HMLAN"){#if recent io is HMLAN and we have to remove the device from IO
+          && $hash->{IODev}->{TYPE} =~ m/^(HMLAN|HMUARTLGW)$/){#if recent io is HMLAN and we have to remove the device from IO
         IOWrite($hash, "", "remove:".CUL_HM_hash2Id($hash));
       }
       $hash->{IODev} = $defs{$iom};
